// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class ShipmentCreated extends ethereum.Event {
  get params(): ShipmentCreated__Params {
    return new ShipmentCreated__Params(this);
  }
}

export class ShipmentCreated__Params {
  _event: ShipmentCreated;

  constructor(event: ShipmentCreated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get origin(): string {
    return this._event.parameters[1].value.toString();
  }

  get destination(): string {
    return this._event.parameters[2].value.toString();
  }

  get supplier(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class StatusUpdated extends ethereum.Event {
  get params(): StatusUpdated__Params {
    return new StatusUpdated__Params(this);
  }
}

export class StatusUpdated__Params {
  _event: StatusUpdated;

  constructor(event: StatusUpdated) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get status(): string {
    return this._event.parameters[1].value.toString();
  }

  get updatedBy(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ShipmentTracking__getShipmentResult {
  value0: BigInt;
  value1: string;
  value2: string;
  value3: string;
  value4: Address;
  value5: Address;
  value6: Address;
  value7: BigInt;

  constructor(
    value0: BigInt,
    value1: string,
    value2: string,
    value3: string,
    value4: Address,
    value5: Address,
    value6: Address,
    value7: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromAddress(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    return map;
  }

  getValue0(): BigInt {
    return this.value0;
  }

  getValue1(): string {
    return this.value1;
  }

  getValue2(): string {
    return this.value2;
  }

  getValue3(): string {
    return this.value3;
  }

  getValue4(): Address {
    return this.value4;
  }

  getValue5(): Address {
    return this.value5;
  }

  getValue6(): Address {
    return this.value6;
  }

  getValue7(): BigInt {
    return this.value7;
  }
}

export class ShipmentTracking__shipmentsResult {
  value0: BigInt;
  value1: string;
  value2: string;
  value3: string;
  value4: Address;
  value5: Address;
  value6: Address;
  value7: BigInt;

  constructor(
    value0: BigInt,
    value1: string,
    value2: string,
    value3: string,
    value4: Address,
    value5: Address,
    value6: Address,
    value7: BigInt,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    map.set("value6", ethereum.Value.fromAddress(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    return map;
  }

  getId(): BigInt {
    return this.value0;
  }

  getOrigin(): string {
    return this.value1;
  }

  getDestination(): string {
    return this.value2;
  }

  getStatus(): string {
    return this.value3;
  }

  getSupplier(): Address {
    return this.value4;
  }

  getTransporter(): Address {
    return this.value5;
  }

  getRetailer(): Address {
    return this.value6;
  }

  getTimestamp(): BigInt {
    return this.value7;
  }
}

export class ShipmentTracking extends ethereum.SmartContract {
  static bind(address: Address): ShipmentTracking {
    return new ShipmentTracking("ShipmentTracking", address);
  }

  getShipment(_shipmentId: BigInt): ShipmentTracking__getShipmentResult {
    let result = super.call(
      "getShipment",
      "getShipment(uint256):(uint256,string,string,string,address,address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_shipmentId)],
    );

    return new ShipmentTracking__getShipmentResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toAddress(),
      result[5].toAddress(),
      result[6].toAddress(),
      result[7].toBigInt(),
    );
  }

  try_getShipment(
    _shipmentId: BigInt,
  ): ethereum.CallResult<ShipmentTracking__getShipmentResult> {
    let result = super.tryCall(
      "getShipment",
      "getShipment(uint256):(uint256,string,string,string,address,address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(_shipmentId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ShipmentTracking__getShipmentResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toAddress(),
        value[5].toAddress(),
        value[6].toAddress(),
        value[7].toBigInt(),
      ),
    );
  }

  shipmentCount(): BigInt {
    let result = super.call("shipmentCount", "shipmentCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_shipmentCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "shipmentCount",
      "shipmentCount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  shipments(param0: BigInt): ShipmentTracking__shipmentsResult {
    let result = super.call(
      "shipments",
      "shipments(uint256):(uint256,string,string,string,address,address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new ShipmentTracking__shipmentsResult(
      result[0].toBigInt(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toAddress(),
      result[5].toAddress(),
      result[6].toAddress(),
      result[7].toBigInt(),
    );
  }

  try_shipments(
    param0: BigInt,
  ): ethereum.CallResult<ShipmentTracking__shipmentsResult> {
    let result = super.tryCall(
      "shipments",
      "shipments(uint256):(uint256,string,string,string,address,address,address,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new ShipmentTracking__shipmentsResult(
        value[0].toBigInt(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toAddress(),
        value[5].toAddress(),
        value[6].toAddress(),
        value[7].toBigInt(),
      ),
    );
  }
}

export class CreateShipmentCall extends ethereum.Call {
  get inputs(): CreateShipmentCall__Inputs {
    return new CreateShipmentCall__Inputs(this);
  }

  get outputs(): CreateShipmentCall__Outputs {
    return new CreateShipmentCall__Outputs(this);
  }
}

export class CreateShipmentCall__Inputs {
  _call: CreateShipmentCall;

  constructor(call: CreateShipmentCall) {
    this._call = call;
  }

  get _origin(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _destination(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _transporter(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _retailer(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class CreateShipmentCall__Outputs {
  _call: CreateShipmentCall;

  constructor(call: CreateShipmentCall) {
    this._call = call;
  }
}

export class UpdateStatusCall extends ethereum.Call {
  get inputs(): UpdateStatusCall__Inputs {
    return new UpdateStatusCall__Inputs(this);
  }

  get outputs(): UpdateStatusCall__Outputs {
    return new UpdateStatusCall__Outputs(this);
  }
}

export class UpdateStatusCall__Inputs {
  _call: UpdateStatusCall;

  constructor(call: UpdateStatusCall) {
    this._call = call;
  }

  get _shipmentId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _status(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateStatusCall__Outputs {
  _call: UpdateStatusCall;

  constructor(call: UpdateStatusCall) {
    this._call = call;
  }
}
