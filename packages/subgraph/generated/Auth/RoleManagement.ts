// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class RoleAssigned extends ethereum.Event {
  get params(): RoleAssigned__Params {
    return new RoleAssigned__Params(this);
  }
}

export class RoleAssigned__Params {
  _event: RoleAssigned;

  constructor(event: RoleAssigned) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get role(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class RoleManagement extends ethereum.SmartContract {
  static bind(address: Address): RoleManagement {
    return new RoleManagement("RoleManagement", address);
  }

  getRole(_user: Address): string {
    let result = super.call("getRole", "getRole(address):(string)", [
      ethereum.Value.fromAddress(_user),
    ]);

    return result[0].toString();
  }

  try_getRole(_user: Address): ethereum.CallResult<string> {
    let result = super.tryCall("getRole", "getRole(address):(string)", [
      ethereum.Value.fromAddress(_user),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  roles(param0: Address): string {
    let result = super.call("roles", "roles(address):(string)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toString();
  }

  try_roles(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall("roles", "roles(address):(string)", [
      ethereum.Value.fromAddress(param0),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class AssignRoleCall extends ethereum.Call {
  get inputs(): AssignRoleCall__Inputs {
    return new AssignRoleCall__Inputs(this);
  }

  get outputs(): AssignRoleCall__Outputs {
    return new AssignRoleCall__Outputs(this);
  }
}

export class AssignRoleCall__Inputs {
  _call: AssignRoleCall;

  constructor(call: AssignRoleCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _role(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AssignRoleCall__Outputs {
  _call: AssignRoleCall;

  constructor(call: AssignRoleCall) {
    this._call = call;
  }
}
